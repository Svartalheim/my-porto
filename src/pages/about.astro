---
import Layout from '../layouts/layout.astro';
import AboutTitle from '@assets/svg/about-title.svg';
import FacetTitle from '@assets/svg/facet-title.svg';
import AboutPhoto from '@assets/images/case-study-all.webp';
import Arrow from '@assets/svg/arrow.svg';
import Flare from '@assets/svg/flare.svg';
import ImageAboutNavbar from '@assets/images/about.png';
import { Image } from 'astro:assets';
import { Separator } from '@components/ui/separator';
import { cn } from '@/lib/utils';

type SpecialitiesItem = { header: string; desc: string; meta?: string };

const SPECIALITIES: SpecialitiesItem[] = [
  {
    header: 'Analytics dashboards & data viz',
    desc: 'Dashboard-builder UIs wired to MySQL, MariaDB, SingleStore, and PostgreSQL. Composable portlets, faceted filters, and configurable charts with clear empty/loading states.',
    meta: 'Portlet — Pages — Dashboards',
  },
  {
    header: 'Next.js architecture & design systems',
    desc: 'Type-safe React/Next.js with shadcn/ui, TanStack (Table/Query), react-hook-form + Zod. Atomic components, design tokens, and pragmatic state management that scales.',
    meta: 'SSR/ISR where useful · per-route caching',
  },
  {
    header: 'Workflow-driven apps (LMS & enterprise)',
    desc: 'Translate multi-role processes into robust web flows—courses, schedules, experts, classrooms, learners, and logistics—complete with RBAC, validation, and admin tooling.',
    meta: 'Roles & permissions · audit-friendly forms',
  },
];
---

<style>
  .what-i-do-container {
    position: relative;
  }

  .what-i-do-item {
    will-change: transform, opacity, box-shadow;
    transform-origin: center center;
    transition: box-shadow 0.1s ease-out;
    position: sticky;
    top: 0px;
    background: var(--background);
  }

  .what-i-do-item:first-child {
    margin-top: 0 !important;
  }

  :global(.page-container:not([data-blurred='true'])) #what-i-do-overlay {
    z-index: 5;
  }

  #what-i-do-overlay span {
    position: absolute;
    z-index: 2;
    width: var(--page-border-radius);
    height: var(--page-border-radius);
    background-color: #000;
    transform: scale(0);
    will-change: transform;
    transition: 0.2s ease;
  }

  #what-i-do-overlay span:first-child {
    top: 0;
    left: 0;
    transform-origin: 0% 0%;
  }

  #what-i-do-overlay span:nth-child(2) {
    top: 0;
    right: 0;
    transform-origin: 100% 0%;
  }

  :global(.page-container:not([data-blurred='true']))
    #what-i-do-overlay[data-active='true']
    span {
    transform: scale(1);
  }

  #what-i-do-overlay span:before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--color-background);
  }

  #what-i-do-overlay span:first-child:before {
    border-top-left-radius: var(--page-border-radius);
  }

  #what-i-do-overlay span:nth-child(2):before {
    border-top-right-radius: var(--page-border-radius);
  }

  #what-i-do-overlay span:before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--color-background);
  }
</style>

<Layout title='about' name='about'>
  <div class='lg:p-[8.333vw] p-[2.333vw]'>
    <div
      class='flex justify-center lg:block px-4 mb-20 [&>*]:w-full [&>*]:h-auto'
      id='about-title'
    >
      <AboutTitle />
    </div>
    <div id='about-header' class='flex justify-center flex-col'>
      <div class='bg-black rounded-[5px] w-[80%] mx-auto overflow-hidden'>
        <Image src={ImageAboutNavbar} alt='about' class='scale-[101%]' />
      </div>
      <Arrow class={'my-12 mx-auto'} />
      <header id='about-hero' class='space-y-5 text-center w-[80%] mx-auto'>
        <p class='p-large'>An Indie Web Developer</p>
        <p class='p-medium font-light'>
          Web Developer based in Indonesia. Presently engaged as a front-end web
          engineer operating on a fulltime basis. Open for a remote position
          anywhere.
        </p>
        <p class='p-medium font-light'>
          I’ve always believed the best websites don’t just look good — they
          make an impact.
        </p>
      </header>
    </div>
  </div>
  <div
    class='text-background bg-primary background-expander relative px-[2vw] lg:p-[8.333vw]'
  >
    <section
      id='whats-different'
      class='mt-[100px] pb-[50px] py-[50px] px-[2vw] lg:p-[8.333vw] pt-[2.333vw]'
    >
      <div
        class='flex justify-center lg:block px-4 mb-[10vw] [&>*]:w-full [&>*]:h-auto [&_*]:fill-white'
        id='about-title'
      >
        <FacetTitle />
      </div>
      <div class='pb-[4.333vw] flex gap-4 p-medium font-light mx-auto'>
        <Flare height={40} width={40} class={'min-w-[40px] h-auto'} />
        <span>
          I build fast, accessible web apps—analytics dashboards and workflow
          tools—using Next.js/React and type-safe systems that turn complex data
          into clear decisions.
        </span>
      </div>
      <Separator className={'bg-background'} />
      <div class='p-medium gap-1 font-light flex flex-col'>
        {
          SPECIALITIES.map((item, index) => (
            <>
              <div class='pb-[1.333vw] py-[3.33vw]' id={`speciality-${index}`}>
                <h3 class='p-large font-medium speciality-title'>
                  {item.header}
                </h3>
                <p
                  class='p-small min-h-0 h-0 opacity-0 max-h-fit  font-light speciality-desc '
                  data-index={index}
                >
                  {item.desc}
                </p>
                {item.meta && <p class='mt-2 p-tiny'>{item.meta}</p>}
              </div>
              <div class=' bg-primary'>
                <Separator className={'speciality-separator bg-background'} />
              </div>
            </>
          ))
        }
      </div>
    </section>
    <section id='why-us'>
      <div
        class='lg:pr-[var(--size-20)] lg:w-[calc(100%-31.458333333333332vw)] lg:flex flex-col justify-between pb-[50px]'
      >
        <div class='lg:pt-[0.20833333333333334vw]'>
          <div class='relative'>
            <span class='absolute left-0 -top-2'>Why me</span>
            <h2 class='h2 indent-24 mb-5'>
              wassup, I'm Svartalheim. A web developer hugely invested in
              front-end side.
            </h2>
          </div>
        </div>

        <div
          class='lg:max-w-[31.458333333333332vw] p-medium font-light space-y-4 lg:ml-auto lg:mt-[1.555555555555555vw]'
        >
          <p>Crafting Seamless Digital Experiences.</p>
          <p>
            I'm a Frontend Engineer dedicated to building high-quality,
            performant web applications. With 3+ years of experience fueled by
            relentless curiosity, I specialize in transforming complex concepts
            into seamless, intuitive user experiences.
          </p>
          <p>
            My technical foundation in React.js, Next.js, and TypeScript is
            paired with a deep understanding of business goals. This ensures my
            work is not just technically sound, but strategically aligned to
            enhance your application's performance, maintainability, and user
            engagement. When you work with me, you're investing in a solution
            that’s scalable, user-focused, and built to modern standards.
          </p>
          <div class='lg:hidden mt-[13px] mb-[38px]'>
            <div class='overflow-hidden rounded-[5px]'>
              <Image
                src={AboutPhoto}
                class='w-full h-auto rotate-3 origin-top-left'
                alt={'Photo about us'}
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>
  <div class='bg-background' id='what-i-do-section'>
    <h2 class='h2 my-20'>What i do</h2>
    <div class='what-i-do-container' id='whatIDoContainer'>
      <div
        inert='inert'
        id='what-i-do-overlay'
        class='borders w-full h-full sticky top-0 inset-0'
        data-active='false'
      >
        <span></span>
        <span></span>
      </div>
      {
        [
          {
            title: 'Web Apps',
            desc: 'Develop High-Performance Web Apps: Create fast, responsive, and SEO-friendly web solutions (including SPAs and Server-Rendered Apps) using modern frameworks like Next.js and React.js.',
          },
          {
            title: 'UI/UX Design',
            desc: 'Build scalable, reusable components that are meticulously optimized for Core Web Vitals and meet the highest accessibility standards (WCAG).',
          },
          {
            title: 'Modernize Codebases',
            desc: 'Specialize in refactoring legacy codebases and translating complex technical requirements into clean, maintainable, and well-documented code.',
          },
          {
            title: 'Full-Stack Tooling (Focus: Frontend)',
            desc: 'Leverage TypeScript and modern JavaScript to deliver robust frontends, ensuring stability and type safety across all projects.',
          },
        ].map((item, index) => {
          return (
            <div
              class={cn(
                'what-i-do-item h-screen flex flex-col ',
                index !== 0 && 'shadow-[0px_-24px_40px_-10px_rgba(0,_0,_0,_0.1)]'
              )}
              data-index={index}
              style={`z-index: ${1 + index}`}
            >
              <Separator className={'bg-foreground/20'} />
              <div class='grid grid-cols-24 gap-1 pt-[64px]'>
                <p class='big-statement col-span-8 h-fit'>{index + 1}</p>
                <div class=' min-w-0 min-h-0 col-start-12 col-span-12'>
                  <p class='text-foreground/80 p-small'>{item.title}</p>
                  <p class='indent-20 h2 font-light hyphens-auto' lang='en'>
                    {item.desc}
                  </p>
                </div>
              </div>
            </div>
          );
        })
      }
    </div>
    <div class='p-medium space-y-4'>
      <p>
        Specializing in performance and quality, I build scalable, reusable
        components that are optimized for Core Web Vitals and meet the highest
        accessibility standards. Whether I'm building modern Server-Rendered
        Apps (SRAs), Single-Page Applications (SPAs), or refactoring legacy
        codebases, my focus is always on delivering fast, responsive, and
        SEO-friendly solutions that translate complex ideas into intuitive
        digital experiences.
      </p>
      <p>
        I combine technical precision with a deep understanding of business
        goals to ensure my work consistently enhances application performance,
        maintainability, and user engagement.
      </p>
      <p>
        Let’s collaborate to turn your vision into a fast, engaging, and
        future-proof digital product.
      </p>
    </div>
  </div>
</Layout>
<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  gsap.registerPlugin(ScrollTrigger);

  // keep track of just our triggers
  let specialityTriggers = new Set();
  let whatIDoTriggers = new Set();

  function killSpecialities() {
    specialityTriggers.forEach((t: any) => t.kill());
    specialityTriggers.clear();
    // Reset completion tracking
    document
      .querySelectorAll('.speciality-desc, .speciality-title')
      .forEach((el) => {
        const element = el as HTMLElement;
        delete element.dataset.completed;
      });
  }

  function killWhatIDo() {
    whatIDoTriggers.forEach((t: any) => t.kill());
    whatIDoTriggers.clear();
  }

  function initSpecialitiesAnimation() {
    killSpecialities(); // prevent duplicates
    const descriptions = document.querySelectorAll('.speciality-desc');
    const titles = document.querySelectorAll('.speciality-title');
    if (!descriptions.length || !titles.length) {
      return;
    }

    let completedAnimations = 0;
    const totalAnimations = descriptions.length + titles.length;

    // Helper function to check if all animations are complete
    function checkAllComplete() {
      completedAnimations++;
      if (completedAnimations >= totalAnimations) {
        const refreshEvent = new CustomEvent('refreshScrollTrigger', {
          detail: {
            source: 'about-specialities',
            delay: 200,
          },
        });
        document.dispatchEvent(refreshEvent);
      }
    }

    descriptions.forEach((item, index) => {
      const element = item as HTMLElement;
      const trigger = gsap.timeline({
        scrollTrigger: {
          trigger: item,
          start: 'top 65%',
          end: 'bottom 30%',
          scrub: true,
          // markers: true,
          onUpdate: (self: any) => {
            // When animation reaches end, trigger refresh
            if (self.progress === 1 && !element.dataset.completed) {
              element.dataset.completed = 'true';
              checkAllComplete();
            }
          },
        },
      });

      specialityTriggers.add(trigger.scrollTrigger);

      // First animate height
      trigger
        .fromTo(
          item,
          { height: 0 },
          {
            height: 'auto',
            duration: 1,
            immediateRender: false,
          }
        )
        // Then animate opacity (starts before height finishes)
        .fromTo(
          item,
          { opacity: 0 },
          {
            opacity: 1,
            duration: 0.4,
            immediateRender: false,
          },
          '-=0.5' // Start 0.5 seconds before the height animation ends
        );
    });

    titles.forEach((item, index) => {
      const element = item as HTMLElement;
      const trigger = gsap.timeline({
        scrollTrigger: {
          trigger: item,
          start: 'top 65%',
          end: 'bottom 30%',
          // scrub: true,
          // markers: true,
        },
      });

      specialityTriggers.add(trigger.scrollTrigger);

      // Animate margin bottom
      trigger.fromTo(
        item,
        { marginBottom: 0 },
        {
          marginBottom: '1rem',
          onComplete: () => {
            if (!element.dataset.completed) {
              element.dataset.completed = 'true';
              checkAllComplete();
            }
          },
        },
        '-=0.3' // Start 0.3 seconds before the height animation ends
      );
    });
  }

  function initWhatIDoAnimation() {
    killWhatIDo(); // prevent duplicates

    const container = document.getElementById('whatIDoContainer');
    const items = document.querySelectorAll('.what-i-do-item');
    const overlay = document.getElementById('what-i-do-overlay');
    if (!container || !items.length) return;

    items.forEach((item, index) => {
      const element = item as HTMLElement;
      const isLast = index === items.length - 1;

      // Set initial z-index for stacking
      element.style.zIndex = `${1 + index}`;

      // All other items: pin and animate when next item approaches
      const trigger = ScrollTrigger.create({
        trigger: element,
        start: 'top top',
        end: () => `+=${window.innerHeight}`,
        pin: false,
        pinSpacing: false,
        scrub: 1,
        onToggle: (self) => {
          if (self.isActive) {
            if (index === 3) {
              overlay?.setAttribute('data-active', 'false');
              return;
            }
            overlay?.setAttribute('data-active', 'true');
          } else {
            if (index === 0) {
              overlay?.setAttribute('data-active', 'false');
              return;
            }
          }
        },
      });
      whatIDoTriggers.add(trigger);
    });
  }

  // Astro View Transitions lifecycle
  document.addEventListener('astro:before-swap', () => {
    killSpecialities();
    killWhatIDo();
  });

  document.addEventListener('astro:page-load', () => {
    setTimeout(() => {
      initSpecialitiesAnimation();
      initWhatIDoAnimation();
    }, 1000);
  });
</script>
